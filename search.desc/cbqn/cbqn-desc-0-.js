searchState.loadedDescShard("cbqn", 0, "cbqn\nConvenience macro for running BQN expressions\nBQN type enumeration\nRepresents a BQN value\n1-modifier\n2-modifier\nReturns the BQN type of the BQNValue\nCalls <code>BQNValue</code> as a function with one argument\nCalls <code>BQNValue</code> as a function with two arguments\nEvaluates BQN code\nGenerates a BQNValue from a Rust function\nGenerates a BQNValue from a Rust function\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>field</code> from a BQN namespace as <code>BQNValue</code>. Returns …\nReturns a boolean value indicating whether <code>field</code> exists in …\nInitializes the CBQN interpreter\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a BQN null value <code>@</code>\nReturns the rank of <code>BQNValue</code>, same as <code>=a</code>\nReturns the shape of <code>BQNValue</code>, same as <code>≢a</code>\nConverts <code>BQNValue</code> into a vector of <code>BQNValue</code>s\nConverts <code>BQNValue</code> into <code>char</code>\nConverts <code>BQNValue</code> into vector of <code>char</code>s\nConverts <code>BQNValue</code> into <code>f64</code>\nConverts <code>BQNValue</code> into a vector of <code>f64</code>s\nConverts <code>BQNValue</code> into a <code>String</code>\nConverts <code>BQNValue</code> into <code>u32</code>")